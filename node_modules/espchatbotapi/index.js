const got = require("got")

class Chatbot {
    constructor(token,contraseñadev){
        if(!token) throw new Error('Falta el token.')
        this.token = token
        this.contraseñadev = contraseñadev
        this.basicurl = 'https://seyron-api-noseque.vicente015.repl.co/api'
        this.url = `${this.basicurl}/${this.token}/`
        this.urldev = `${this.basicurl}/${this.contraseñadev}/`
    }
    enseñar(texto,respuesta){
        if(!texto) throw new Error('Debe introducir el texto de entrada')
        if(!respuesta) throw new Error('Debe decirme la salida al texto de entrada')
        return new Promise((resolve, reject) => {
            texto = encodeURIComponent(texto);
            respuesta = encodeURIComponent(respuesta);
            got(`${this.url}subir/${texto}/${respuesta}`,{json:true}).then(r => {
                let datos = r.body
                if(datos.error) return reject(datos.error)
                resolve(datos.resultado)
            })
        })
    }
    obtener(texto,fiabilidad){
        if(!texto) throw new Error('Debe introducir el texto de entrada')
        return new Promise((resolve, reject) => {
            texto = encodeURIComponent(texto);
            got(`${this.url}obtener/${texto}`,{json:true}).then(r => {
                let datos = r.body
                if(datos.error) return reject(datos.error)
                if(fiabilidad){
                resolve([datos.respuesta,datos.fiabilidad])
                } else {
                resolve(datos.respuesta)
                }
            })
        })
    }
    borrar(texto){
        if(!texto) throw new Error('Debe introducir el texto de entrada')
        return new Promise((resolve, reject) => {
            texto = encodeURIComponent(texto);
            got(`${this.url}borrar/${texto}`,{json:true}).then(r => {
                let datos = r.body
                if(datos.error) return reject(datos.error)
                resolve(datos.respuesta)
            })
        })
    }
    generartoken(id){
        if(!id) throw new Error('Debe introducir la id del usuario')
        return new Promise((resolve, reject) => {
            got(`${this.urldev}/${id}/generartoken`,{json:true}).then(r => {
                let datos = r.body
                if(datos.error) return reject(datos.error)
                resolve(datos.respuesta)
            })
        })
    }
    borrartoken(id){
        if(!id) throw new Error('Debe introducir la id del usuario')
        return new Promise((resolve, reject) => {
            got(`${this.urldev}/${id}/borrartoken`,{json:true}).then(r => {
                let datos = r.body
                if(datos.error) return reject(datos.error)
                resolve(datos.respuesta)
            })
        })
    }
    token(id){
        if(!id) throw new Error('Debe introducir la id del usuario')
        return new Promise((resolve, reject) => {
            got(`${this.urldev}/${id}/token`,{json:true}).then(r => {
                let datos = r.body
                if(datos.error) return reject(datos.error)
                resolve(datos.respuesta)
            })
        })
    }
}

module.exports = Chatbot